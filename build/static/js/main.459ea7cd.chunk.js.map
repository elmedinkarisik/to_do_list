{"version":3,"sources":["Todo.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","List","className","ListItem","ListItemAvatar","ListItemText","primary","text","secondary","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","App","useState","todos","setTodos","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","todo","FormControl","InputLabel","Input","value","onChange","event","target","Button","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAoBeA,MAXf,SAAcC,GACZ,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAcC,QAASN,EAAMO,KAAMC,UAAU,mB,QCDtCC,EAXKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAGcC,YCkDRC,MAtDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,qBAAU,WACRhB,EAAGiB,WAAW,SACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXP,EAASO,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,OAAOC,cAElD,IAcD,sBAAKhC,UAAU,MAAf,UACE,oDACA,iCACE,eAACiC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,4BACA,cAACC,EAAA,EAAD,CACEC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAWhB,EAASgB,EAAMC,OAAOH,aAG/C,cAACI,EAAA,EAAD,CACEC,UAAWpB,EACXqB,KAAK,SACLC,QAzBQ,SAACL,GACfA,EAAMM,iBAENrC,EAAGiB,WAAW,SAASqB,IAAI,CACzBb,KAAMX,EACNyB,UAAWtC,IAASQ,UAAU+B,WAAWC,oBAG3C1B,EAAS,KAkBH2B,QAAQ,YACRC,MAAM,UALR,yBAWF,6BACG/B,EAAMU,KAAI,SAACG,GAAD,OACT,cAAC,EAAD,CAAM3B,KAAM2B,aC1CPmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.459ea7cd.chunk.js","sourcesContent":["import {\n  ListItem,\n  ListItemText,\n  List,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport \"./Todo.css\";\nimport React from \"react\";\n\nfunction Todo(props) {\n  return (\n    <List className=\"todo__list\">\n      <ListItem>\n        <ListItemAvatar />\n        <ListItemText primary={props.text} secondary=\"Deadline\" />\n      </ListItem>\n    </List>\n  );\n}\n\nexport default Todo;\n","import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyA40aMMwp68MG8CzHp3_Fzi6wpqcNWhMY8\",\n  authDomain: \"to-do-list-3b02f.firebaseapp.com\",\n  projectId: \"to-do-list-3b02f\",\n  storageBucket: \"to-do-list-3b02f.appspot.com\",\n  messagingSenderId: \"782955114750\",\n  appId: \"1:782955114750:web:0bca022c514f93443075af\",\n});\n\nconst db = firebaseApp.firestore();\n\nexport default db;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport \"./App.css\";\nimport Todo from \"./Todo\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setTodos(snapshot.docs.map((doc) => doc.data().todo));\n      });\n  }, []);\n\n  const addTodo = (event) => {\n    event.preventDefault();\n\n    db.collection(\"todos\").add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>To-Do List Web-App</h1>\n      <form>\n        <FormControl>\n          <InputLabel>Write a To-Do</InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n        </FormControl>\n        <Button\n          disabled={!input}\n          type=\"submit\"\n          onClick={addTodo}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Item\n        </Button>\n      </form>\n\n      <ul>\n        {todos.map((todo) => (\n          <Todo text={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}